daml 1.2

module Main.Com.Banking.Business.Account.Service where

import Main.Com.Banking.Business.Account.Persistence qualified as Account
import Main.Com.Banking.Business.Account.Model qualified as Account
import Main.Com.Banking.Business.Bank.Model qualified as Bank

data Request
  = AccountCreate_ AccountCreate
  deriving (Eq, Show)

data Response
  = AccountCreated Account.T
  deriving (Eq, Show)

data AccountCreate = AccountCreate with
    owner: Party
    name: Text
    accountNumber: Text
    initialAmount: Decimal
    bankId: Bank.K
  deriving (Eq, Show)

findAccount = Account.findAccount

createAccount : Party -> Party -> Text -> Text -> Decimal -> Bank.K -> Update Account.T
createAccount master accountOwner name accountNumber initialAmount bankId = do
    let account = Account.Model with
          owner = master
          accountOwner
          name = name
          accountNumber = accountNumber
          amount = initialAmount
          bankId = bankId
    response <- Account.save master account *> pure account
    pure response

findAccountsByBank = Account.findAccountsByBank
findAllAccounts = Account.findAllAccounts